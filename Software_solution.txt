Efficient Janitor

#!/bin/python3

import math
import os
import random
import re
import sys



#
# Complete the 'efficientJanitor' function below.
#
# The function is expected to return an INTEGER.
# The function accepts FLOAT_ARRAY weight as parameter.
#

def efficientJanitor(weight):
    count = 0
    i, j = 0, len(weight) - 1
    weight.sort()
    while i <= j:
        count += 1
        if weight[i] + weight[j] <= 3:
            i += 1
        j -= 1
    return count

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    weight_count = int(input().strip())

    weight = []

    for _ in range(weight_count):
        weight_item = float(input().strip())
        weight.append(weight_item)

    result = efficientJanitor(weight)

    fptr.write(str(result) + '\n')

    fptr.close()

Scheduling Errors

SELECT DISTINCT prof.name AS "PROFESSOR.NAME", cou.name AS "COURSE.NAME"
FROM professor prof
INNER JOIN schedule sch 
ON sch.professor_id = prof.id
INNER JOIN course cou 
ON sch.course_id = cou.id
WHERE cou.department_id <> prof.department_id;

IP Tracker

def ipTracker(ip):
    # Write your code here
    ip_info = ''
    url = "https://jsonmock.hackerrank.com/api/ip?ip=" + ip
    response = requests.get(url)
    result = json.loads(response.content)
    if len(result['data']) > 0:
        ip_info = result['data'][0]['country']
    else:
        ip_info = 'No Result Found'
        
    return ip_info